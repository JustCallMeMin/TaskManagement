const mongoose = require('mongoose');
const seedUsers = require('./user.seed');
const seedProjects = require('./project.seed');
const seedTasks = require('./task.seed');
require('dotenv').config();

/**
 * Ch·∫°y t·∫•t c·∫£ c√°c test seeds
 * @param {Object} options - T√πy ch·ªçn cho vi·ªác seeding
 * @param {Boolean} options.clearExisting - X√≥a d·ªØ li·ªáu hi·ªán c√≥ tr∆∞·ªõc khi seed
 */
const runTestSeeds = async (options = { clearExisting: false }) => {
  try {
    console.log('‚è≥ ƒêang ch·∫°y test seeds...');
    console.log(`${options.clearExisting ? '‚ö†Ô∏è X√≥a' : '‚úÖ Gi·ªØ nguy√™n'} d·ªØ li·ªáu hi·ªán c√≥.`);

    // Ch·∫°y theo th·ª© t·ª±: users -> projects -> tasks
    const users = await seedUsers(10, options.clearExisting);
    const projects = await seedProjects(15, options.clearExisting);
    const tasks = await seedTasks(50, options.clearExisting);

    console.log('‚úÖ ƒê√£ ho√†n th√†nh test seeds!');
    console.log(`üìä ƒê√£ t·∫°o: ${users.length} users, ${projects.length} projects, ${tasks.length} tasks`);
    
    return { users, projects, tasks };
  } catch (error) {
    console.error('‚ùå L·ªói khi ch·∫°y test seeds:', error);
    throw error;
  }
};

module.exports = { runTestSeeds };

// N·∫øu ch·∫°y tr·ª±c ti·∫øp file n√†y
if (require.main === module) {
  // L·∫•y tham s·ªë t·ª´ command line
  const args = process.argv.slice(2);
  const clearExisting = args.includes('--clear') || args.includes('-c');

  mongoose.connect(process.env.MONGO_URI || 'mongodb://localhost:27017/task_management')
    .then(() => {
      console.log('üì¶ ƒê√£ k·∫øt n·ªëi MongoDB');
      return runTestSeeds({ clearExisting });
    })
    .then(() => {
      console.log('üéâ Test seeding completed!');
      process.exit(0);
    })
    .catch(err => {
      console.error('‚ùå L·ªói:', err);
      process.exit(1);
    });
} 